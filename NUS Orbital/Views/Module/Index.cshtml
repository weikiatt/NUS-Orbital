@model IEnumerable<NUS_Orbital.Models.Module>


<!DOCTYPE html>
<html>
<head>
    <title>Modules</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css"
          integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link rel="stylesheet" href="~/NUS_Orbital.styles.css" asp-append-version="true" />
    <link rel="stylesheet" type="text/css" href="~/css/style.css">

    <script defer src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
            integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js"
            integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js"
            integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
</head>
<body>
    <div class="container">
        @if (Context.Session.GetString("role") == "admin")
        {
            <button onclick="showAddModule()" id="addModuleButton" class="btn-green btn-pill mt-3">+ Add Module</button>
            <form id="addModuleDiv" class="hidden" action="~/Module/AddModule" method="post" enctype="multipart/form-data">
                <div id="moduleCodeFormat" class="text-danger">Please enter 2-3 alphabets, followed by 4 numbers (optional: another 1-3 alphabets)</div>
                <input class="w-100 form-control mt-2" placeholder="Module Code..." id="moduleCode" required oninput="toggleAddModuleButton()" name="moduleCode"></input>
                <input class="w-100 form-control mt-2" placeholder="Module Name..." id="moduleName" required oninput="toggleAddModuleButton()" name="moduleName"></input>
                <textarea class="w-100 form-control mt-2" placeholder="Description..." id="description" required oninput="toggleAddModuleButton()" name="description"></textarea>
                <label class="mt-2">Units</label>
                <select class="form-control" id="units" name="units">
                    <option value="0">0</option>
                    <option value="2">2</option>
                    <option value="4">4</option>
                    <option value="8">8</option>
                    <option value="12">12</option>
                </select>
                <label class="mt-2">Grading Basis</label>
                <select class="form-control" id="gradingBasis" name="gradingBasis">
                    <option value="Graded">Graded</option>
                    <option value="Completed Satisfactory/Unsatisfactory">Completed Satisfactory/Unsatisfactory</option>
                </select>
                <input type="checkbox" id="hide" name="hide">
                <label for="hide">Hide Module From Students</label>
                <div class="justify-content-end align-items-end d-flex">
                    <button type="submit" class="btn-green btn-pill mt-2" disabled id="submitBtn">Submit</button>
                </div>
            </form>
            <hr />
            <input placeholder="Module code, module name" class="form-control mt-3" id="query" name="query" oninput="updateListAdmin()">
            <table class="table" style="table-layout: fixed">
                <thead>
                    <tr id="header">
                        <th scope="col" style="width:15%">Module Code</th>
                        <th scope="col" style="width:65%">Module Name</th>
                        <th scope="col" style="width:10%">View</th>
                        <th scope="col" style="width:10%">Edit</th>
                    </tr>
                </thead>
                <tbody id="results">
                    @foreach (var module in Model)
                    {
                        <tr id="module(@module.moduleCode">
                            <th scope="row">@module.moduleCode</th>
                            <td id="moduleName(@module.moduleName">@module.moduleName</td>
                            <td><a href="@Url.Action("View","Module", new {moduleCode = @module.moduleCode})">View</a></td>
                            <td><button class="btn bg-green" onclick="showEditModal('@module.moduleCode', '@module.moduleName', '@module.description', '@module.units', '@module.graded', '@module.hidden')">Edit</button></td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="modal fade" id="editModuleModal" tabindex="-1" role="dialog" aria-labelledby="editModuleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editModuleModalLabel">Edit Module</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <form id="editModuleForm" method="post" action="~/Module/EditModule" enctype="multipart/form-data">
                            <div class="modal-body">
                                <div class="form-group">
                                    <label for="moduleCodeEdit">Module Code</label>
                                    <input type="text" class="form-control" id="moduleCodeEdit" name="moduleCode" required readonly>
                                </div>
                                <div class="form-group">
                                    <label for="moduleNameEdit">Module Name</label>
                                    <input type="text" class="form-control" id="moduleNameEdit" name="moduleName" required>
                                </div>
                                <div class="form-group">
                                    <label for="descriptionEdit">Description</label>
                                    <textarea class="form-control" id="descriptionEdit" name="description" required></textarea>
                                </div>
                                <div class="form-group">
                                    <label class="mt-2">Units</label>
                                    <select class="form-control" id="unitsEdit" name="units">
                                        <option value="0">0</option>
                                        <option value="2">2</option>
                                        <option value="4">4</option>
                                        <option value="8">8</option>
                                        <option value="12">12</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label class="mt-2">Grading Basis</label>
                                    <select class="form-control" id="gradedEdit" name="gradingBasis">
                                        <option value="Graded">Graded</option>
                                        <option value="Completed Satisfactory/Unsatisfactory">Completed Satisfactory/Unsatisfactory</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <input type="checkbox" id="hideEdit" name="hide">
                                    <label for="hideEdit">Hide Module From Students</label>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-cancel" data-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-green btn-pill">Save Changes</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        } else
        {
            <input placeholder="Module code, module name" class="form-control mt-3" id="query" name="query" oninput="updateList()">
            <div class="list-group mt-3 mb-3" id="results">
                @foreach (var module in Model)
                {
                    <a href="@Url.Action("View","Module", new {moduleCode = @module.moduleCode})" class="list-group-item list-group-item-action" id="module(@module.moduleCode">
                        <h5 class="mb-1 text-green">@module.moduleCode</h5>
                        <h6 class="text-secondary">@module.moduleName</h6>
                    </a>
                }
            </div>
        }
        
    </div>
    <script>
        function showEditModal(moduleCode, moduleName, description, units, graded, hidden) {
            document.getElementById('moduleCodeEdit').value = moduleCode;
            document.getElementById('moduleNameEdit').value = moduleName;
            document.getElementById('descriptionEdit').value = description;
            document.getElementById('unitsEdit').value = units;
            document.getElementById('gradedEdit').value = graded;
            document.getElementById('hideEdit').checked = hidden === "True";
            $('#editModuleModal').modal('show');
        }

        function toggleAddModuleButton() {
            var moduleCodeInput = document.getElementById('moduleCode');
            var moduleNameInput = document.getElementById('moduleName');
            var descriptionInput = document.getElementById('description');
            var moduleCodeFormat = document.getElementById('moduleCodeFormat');
            var submitBtn = document.getElementById('submitBtn');

            // Regex to check 2-3 alphabets, 4 numbers, then 0-3 alphabets
            var moduleCodeRegex = /^[a-zA-Z]{2,3}\d{4}[a-zA-Z]{0,3}$/;
                
            if (moduleCodeRegex.test(moduleCodeInput.value) && moduleNameInput.value.trim() !== '' && descriptionInput.value.trim() !== '') {
                submitBtn.disabled = false;
                moduleCodeFormat.innerHTML = "";
            } else {
                submitBtn.disabled = true;
                moduleCodeFormat.innerHTML = moduleCodeRegex.test(moduleCodeInput.value) ? "" : "Please enter 2-3 alphabets, followed by 4 numbers (optional: another 1-3 alphabets)";
            }
        }

        function showAddModule() {
            var addModuleButton = document.getElementById("addModuleButton");
            var addModuleDiv = document.getElementById("addModuleDiv");
            if (addModuleDiv.classList.contains('hidden')) {
                addModuleDiv.classList.remove('hidden');
                addModuleButton.innerHTML = "- Hide Draft";
            } else {
                addModuleDiv.classList.add('hidden');
                addModuleButton.innerHTML = "+ Add Module";
            }
        }

        

        function updateList() {
            var query = document.getElementById("query").value.toLowerCase();
            const allMods = document.querySelectorAll('a[id ^= "module("]'); 
            allMods.forEach(function (mod) {
                var text = mod.textContent.toLowerCase();
                if (text.includes(query)) {
                    mod.classList.remove('hidden');
                    highlightText(mod, query);
                } else {
                    mod.classList.add('hidden');
                    resetHighlight(mod);
                }
            });
        }

        function highlightText(element, query) {
            const regex = new RegExp(`(${query})`, 'gi');
            const paragraphs = element.querySelectorAll('h5, h6');

            paragraphs.forEach(function (paragraph) {
                paragraph.innerHTML = paragraph.textContent.replace(regex, '<span class="highlight">$1</span>');
            });
        }

        function resetHighlight(element) {
            const paragraphs = element.querySelectorAll('h5, p');

            paragraphs.forEach(function (paragraph) {
                paragraph.innerHTML = paragraph.textContent; 
            });
        }





        function highlightTextAdmin(element, query) {
            const regex = new RegExp(`(${query})`, 'gi');
            const paragraphs = element.querySelectorAll('th, td[id^="moduleName"]');

            paragraphs.forEach(function (paragraph) {
                paragraph.innerHTML = paragraph.textContent.replace(regex, '<span class="highlight">$1</span>');
            });
        }

        function resetHighlightAdmin(element) {
            const paragraphs = element.querySelectorAll('th, td[id^="moduleName"]');

            paragraphs.forEach(function (paragraph) {
                paragraph.innerHTML = paragraph.textContent; // Reset to original text
            });
        }


        
        function updateListAdmin() {
            var query = document.getElementById("query").value.toLowerCase();
            const allMods = document.querySelectorAll('tr[id ^= "module("]');
            allMods.forEach(function (mod) {
                var text = mod.textContent.toLowerCase();
                if (text.includes(query)) {
                    mod.classList.remove('hidden');
                    highlightTextAdmin(mod, query);
                } else {
                    mod.classList.add('hidden');
                    resetHighlightAdmin(mod);
                }
            });
        }
    </script>

</body>
</html>
