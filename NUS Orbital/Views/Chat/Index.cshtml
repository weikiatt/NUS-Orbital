@model NUS_Orbital.Models.ChatList

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css"
          integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link rel="stylesheet" href="~/NUS_Orbital.styles.css" asp-append-version="true" />
    <link rel="stylesheet" type="text/css" href="~/css/style.css">

    <script defer src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
            integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js"
            integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js"
            integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
    <script src="~/js/signalr.js"></script>
    <script defer src="~/js/chat.js"></script>
    <script defer src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body>
    <style>
        .scrollbar {
            height: 300px;
            width: 50%;
            overflow: auto;
            padding: 0 10px;
        }

        .scrollbar::-webkit-scrollbar {
            width: 12px;
        }

        .scrollbar::-webkit-scrollbar-track {
            border-radius: 8px;
                background-color: #a6bfa5ff;
            border: 1px solid #cacaca;
        }

        .scrollbar::-webkit-scrollbar-thumb {
            border-radius: 8px;
            background-color:#00892B;
        }
    </style>

    <div class="container">
        <div class="row">
            <div class="example col-auto d-flex flex-column bg-white h-auto scrollbar w-auto" style="max-height:400px;">
                <p>People you have chat with</p>
                @foreach(var stud in Model.students)
                {
                    <button class="chatTab w-100 mt-2 justify-content-start align-items-center d-flex" onclick="showChat(@Model.currStudent.StudentId,@stud.otherStudent.StudentId)">
                        <img class="profile-picture wh-50" src="@stud.otherStudent.Photo" />
                        <p class="mb-0 ml-2 chatName">@stud.otherStudent.Name</p>
                    </button>
                }
            </div>
            <div class="col bg-white">
                @foreach (var stud in Model.students)
                {
                    <div id="chat(@Model.currStudent.StudentId,@stud.otherStudent.StudentId)" class="mt-3 hidden">
                        <a href="~/Student/ViewAccount?email=@stud.otherStudent.Email" method="get" class="col-auto text-black justify-content-start align-items-center d-flex">
                            <img class="profile-picture wh-50" src="@stud.otherStudent.Photo" />
                            <strong class="mb-0 ml-2">@stud.otherStudent.Name</strong>
                        </a>
                        <div id="chatContent(@Model.currStudent.StudentId,@stud.otherStudent.StudentId)" class="scrollbar w-100" style="min-height:200px;max-height:400px">
                            @foreach (var txt in stud.chatLog)
                            {
                                @if (Model.currStudent.StudentId == txt.sender.StudentId)
                                {
                                    <div class="justify-content-end d-flex w-auto ml-5 mr-3">
                                        <div class="mt-1 bg-green border-2 p-2 chatBubble">
                                            @txt.description
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="justify-content-start d-flex w-auto mr-5 ml-3">
                                        <div class="mt-1 bg-light border-2 p-2 chatBubble">
                                            @txt.description
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <div class="d-flex bg-green p-1 mt-2">
                            <textarea id="inputMsg(@stud.otherStudent.StudentId)" class="mt-2 w-100 form-control mr-4 chatInput" placeholder="message..."></textarea>
                            <button id="sendButton(@stud.otherStudent.StudentId)" class="btn-cancel" onclick="sendMessage(@Model.currStudent.StudentId, @stud.otherStudent.StudentId)">Send</button>
                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
    <script>

        function flipString(str) {
            return str.split('').reverse().join('');
        }


        function getFormattedDateTime() {
            var now = new Date();

            var day = now.getDate();
            var month = now.getMonth() + 1; // Months are zero-based
            var year = now.getFullYear();

            var hours = now.getHours();
            var minutes = now.getMinutes();
            var seconds = now.getSeconds();

            var ampm = hours >= 12 ? 'pm' : 'am';
            hours = hours % 12;
            hours = hours ? hours : 12; // The hour '0' should be '12'
            //minutes = minutes < 10 ? '0' + minutes : minutes;
            //seconds = seconds < 10 ? '0' + seconds : seconds;

            //day = day < 10 ? '0' + day : day;
            //month = month < 10 ? '0' + month : month;

            var formattedDate = day + '/' + month + '/' + year;
            var formattedTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;

            return formattedDate + ' ' + formattedTime;
        }

        "use strict";

        var connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();
        connection.start();

        connection.on("ReceiveMessage", function (user, message) {
            var now = new Date();
            var currentTime = now.toLocaleTimeString()

            var currUser = document.getElementById("chatContent(" + user + ")")
            if (currUser) {
                var currUserContent = document.createElement("div");
                currUserContent.innerHTML = `
                                        <div class="justify-content-end d-flex w-auto ml-5 mr-3">
                                                <div class="mt-1 bg-green border-2 p-2 chatBubble">
                                        ${message}
                                    </div>
                                </div>
                            `
                currUser.appendChild(currUserContent);
            }
            var otherUser = document.getElementById("chatContent(" + flipString(user) + ")");
            if (otherUser) {
                var otherUserContent = document.createElement("div");
                otherUserContent.innerHTML = `
                                        <div class="justify-content-start d-flex w-auto mr-5 ml-3">
                                                <div class="mt-1 bg-light border-2 p-2 chatBubble">
                                        ${message}
                                    </div>
                                </div>
                            `
                otherUser.appendChild(otherUserContent);
            }
            currUser.scrollTop = currUser.scrollHeight;
        });

        /*
        document.getElementById("sendButton").disabled = true;
        connection.start().then(function () {
            document.getElementById("sendButton").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });*/

        /*
        document.getElementById("sendButton").addEventListener("click", function (event) {
            var user = document.getElementById("userInput").value;
            var message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", user, message).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        });*/

        function showChat(currStudId, otherStudId) {
            const allChats = document.querySelectorAll('div[id^="chat("]');
            allChats.forEach(function (div) {
                div.classList.add("hidden"); // Hide all chat divs initially
                div.classList.remove("bg-white");
            });
            var chatToShow = document.getElementById("chat(" + currStudId + "," + otherStudId + ")");
            
            if (chatToShow) {
                chatToShow.classList.remove("hidden"); // Show the chat div corresponding to the selected student ID
                chatToShow.classList.add("bg-white");
                var chatContent = document.getElementById("chatContent(" + currStudId + "," + otherStudId + ")");
                chatContent.scrollTop = chatContent.scrollHeight;
            }
        }

        function sendMessage(currStudId, otherStudId) {
            //event.preventDefault();
            var user = currStudId + "," + otherStudId;
            var message = document.getElementById("inputMsg(" + otherStudId + ")");
            //var currentTime = getFormattedDateTime();

            
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SendMessage", "Chat")',
                dataType: 'json',
                data: {
                    currStudId: currStudId,
                    otherStudId: otherStudId,
                    msg: message.value
                },
                success: function (response) {
                    connection.invoke("SendMessage", user, message.value).catch(function (err) {
                        return console.error(err.toString());
                    });
                    message.value = "";
                    
                },
                error: function (xhr, status, error) {
                    alert('err');
                }
            });
        }
    </script>
</body>
